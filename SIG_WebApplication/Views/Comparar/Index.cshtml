
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<!-- Shoping Cart -->
<!-- Title page -->
<section class="bg-img1 txt-center p-lr-15 p-tb-42" style="background-image: url('../../images/Headers/offica-home.JPG'); text-align:center;">
    <div class=" h-full p-t-0 p-b-0 respon5" style="text-align:center;">
        <div class="layer-slick1 animated " style="text-align:center;">
            <br /><br /><br /><br /><br />
            <h2 class="ltext-201 cl2 p-t-19 p-b-43 respon1 text-center" style="font-size: 30px; width:100%; text-align:center;font-family: " Proxima Nova",-apple-system,"Helvetica Neue",Helvetica,Roboto,Arial,sans-serif;">
                &nbsp;Inmuebles comparar  <span style="color: #dc8505"> </span>&nbsp;
            </h2>
            <br /><br /><br />
        </div>
    </div>
</section>

<div class="container bg0 p-t-75 p-b-85">
    <div class="row">
        <div class="col-md-4">
            <div class="card" style="width: 100%;">
                <div class="card-body">
                    <h1 style="text-align:center"><strong>Inmuebles comparar </strong> </h1>

                    <hr />
                    @foreach (var Inmuebles in ViewBag.Inmuebles)
                    {
                        <div class="card" style="height:200px">
                            <a href="#" class="hov-img0 how-pos5-parent">
                                <img class="card-img-top " src="@Inmuebles.Imagen" alt="Card image cap">
                                <div class="flex-col-c-m size-123 bg9 how-pos5">
                                    <span class="ltext-107 cl2 txt-center">
                                        @Inmuebles.Dia
                                    </span>
                                    <span class="stext-109 cl3 txt-center">
                                        @Inmuebles.Mes @Inmuebles.FechaRegistro
                                    </span>
                                </div>
                            </a>
                        </div>
                        <div class="card-body bor4">
                            <h5 class="card-title" style="font-size:15px">@Inmuebles.Titulo</h5>
                            <textarea rows="5" cols="80" style="font-size:13px" class="form-control" disabled="" placeholder="" id="m_Descripcion">@Inmuebles.Descripcion</textarea>
                            <p class="card-text"><small class="text-muted">Publicado hace @Inmuebles.Tiempo</small></p>

                            <div class=" m-t-5 ">
                                <br />

                            </div>
                            <div class=" flex-sb-m ">
                                <span class="" style="font-size:13px">
                                    <span>
                                        <span class="cl4">Categoría </span> @Inmuebles.TipoCategoria
                                        <span class="cl12 m-l-4 m-r-6">|</span>
                                    </span>

                                    <span>
                                        @Inmuebles.SubCategoria, @Inmuebles.Estado
                                        <span class="cl12 m-l-4 m-r-6">|</span>
                                    </span>

                                    <span>
                                        @Inmuebles.Poblacion
                                    </span>
                                </span>
                            </div>
                            <br />
                            <a class=" cl2 hov-cl1 trans-04 m-tb-3">
                                <button type="button" id="" style="font-size:12px" onclick="MostrarInmuebleComparar(@Inmuebles.Id)" class="flex-c-m cl0 size-125 bg3 bor2 hov-btn3 p-lr-1 trans-04">Mostrar  &nbsp; <i class="fa fa-share-square-o" aria-hidden="true"></i></button>
                            </a>
                            <br />
                            <a class=" cl2 hov-cl1 trans-04 m-tb-5">
                                <button type="button" id="" style="font-size:12px" onclick="QuitarInmueble(@Inmuebles.Id)" class="flex-c-m cl0 size-125 bg3 bor2 hov-btn3 p-lr-15 trans-04">Eliminar de mi lista   &nbsp; <i class="fa fa-trash" aria-hidden="true"></i></button>
                            </a>
                        </div>
                        <br /><br />
                    }
                </div>
            </div>
        </div>
        <div class="col-md-8">
            @if (ViewBag.Total == 0)
            {
                <div class="row">
                    <div class="col-sm-12 col-sm-offset-2 text-center">
                        <hr />
                        <br />

                        <h1 style="color:#17a2b8"><strong>¡Uuups!</strong> </h1>
                        <h5 style="padding:30px; "><strong>En este momento no hay inmuebles agregados que puedas comparar.</strong> </h5>
                        <h1 style="padding:3px; font-size:100px"><strong><i class="fa fa-exchange" aria-hidden="true"></i></strong> </h1>
                        <div class="description">
                            <p>

                                Puedes agregarlos dando clic en el botón, dentro de cada inmueble
                                <br />
                                <div class='product-btns'>
                                    <button class='add-to-compare' tabindex='0'><i class='fa fa-exchange'></i><span class='tooltipp'>Añadir comparar</span></button>
                                </div>
                                <br />
                            </p>
                        </div>
                    </div>
                </div>
                <br />
                <div class="bg6 flex-c-m flex-w size-301">
                    <span class="stext-107 cl6 p-lr-25">
                        <label id="m_TipoCategoriaS"></label>
                    </span>
                    <span class="stext-107 cl6 p-lr-25">
                    </span>
                </div>
            }
            else
            {
                <p>Realiza una comparación de los inmuebles.</p>
                <hr />
                <p>El precio es evaluado en <strong>MXN</strong> y unidades de medida en <strong>M2</strong> .</p>
                <br />
                <div class="row">
                    <div class="col-sm-12">
                        <div class="table-responsive">

                            <table class="table table-striped table-hover table-sm">
                                <thead class="thead-light">
                                    <tr>
                                        <th scope="col">Categoría </th>
                                        <th scope="col">Tipo</th>
                                        <th scope="col">Precio</th>
                                        <th scope="col">Superficie construida </th>
                                        <th scope="col">Superficie el terreno </th>
                                        <th scope="col">Baños </th>
                                        <th scope="col">Estacionamientos </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var Com in ViewBag.Listcomparar)
                                    {
                                        <tr>
                                            <th scope="row">@Com.TipoCategoria</th>
                                            <td>@Com.TipoSubCategoria</td>
                                            <td>@Com.PrecioFinalText</td>
                                            <td>@Com.SuperficieText</td>
                                            <td>@Com.SuperficieTText</td>
                                            <td>@Com.WC</td>
                                            <td>@Com.Estacionamientos</td>
                                        </tr>
                                    }

                                </tbody>
                            </table>

                        </div>
                    </div>
                </div>



                <canvas id="densityChart" width="600" height="350"></canvas>
                <hr />
                <canvas id="SuperficieChart" width="600" height="350"></canvas>
                <hr />
                <canvas id="SuperficieTChart" width="600" height="350"></canvas>
                <hr />
                <canvas id="WCChart" width="600" height="350"></canvas>
                <hr />
                <canvas id="EstacionamientosChart" width="600" height="350"></canvas>
            }

        </div>
    </div>
</div>

<div class="bg6 flex-c-m flex-w size-302 m-t-73 p-tb-15">
    <span class="stext-107 cl6 p-lr-25">

    </span>

    <span class="stext-107 cl6 p-lr-25">

    </span>
</div>


<script>
    $(document).ready(function () {
        var densityCanvas = document.getElementById("densityChart");

        Chart.defaults.global.defaultFontFamily = "Arial, sans-serifapple-system,BlinkMacSystemFont,'Segoe UI',Roboto,'Helvetica Neue',Arial,sans-serif";
        Chart.defaults.global.defaultFontSize = 14;

        var densityData = {
            label: 'Precio inmueble (MXN)',

            options: {
                legend: {
                    labels: {
                        // This more specific font property overrides the global property
                        //fontColor: 'black',
                        defaultFontFamily: 'Arial, sans-serifapple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif',
                        fontColor: 'rgb(154, 154, 154)',
                        usePointStyle: true,
                    }
                }
            },


            data: [
                @foreach (var Com in ViewBag.Listcomparar)
                {
                    @Html.Raw(@Com.PrecioFinal)
                    @Html.Raw(",")
                }



            ],
            backgroundColor: [
                'rgba(67, 206, 162, 0.9)',
                'rgba(63, 194, 162, 0.9)',
                'rgba(63, 195, 162, 0.9)',
                'rgba(54, 169, 161, 0.9)',
                'rgba(50, 160, 160, 0.9)',
                'rgba(49, 158, 160, 0.9)',
                'rgba(44, 145, 159, 0.9)',
                'rgba(37, 126, 159, 0.9)',
                'rgba(34, 116, 158, 0.9)',
                'rgba(28, 101, 158, 0.9)',
                'rgba(26, 95, 157, 0.9)',
                'rgba(25, 91, 157, 0.9)',

                'rgba(26, 95, 157, 0.9)',
                'rgba(28, 101, 158, 0.9)',
                'rgba(34, 116, 158, 0.9)',
                'rgba(37, 126, 159, 0.9)',
                'rgba(44, 145, 159, 0.9)',
                'rgba(49, 158, 160, 0.9)',
                'rgba(50, 160, 160, 0.9)',
                'rgba(54, 169, 161, 0.9)',
                'rgba(63, 195, 162, 0.9)',
                'rgba(63, 194, 162, 0.9)',
                'rgba(67, 206, 162, 0.9)',

            ],
            borderColor: [
                'rgba(63, 194, 162, 0.9)',
                'rgba(63, 195, 162, 0.9)',
                'rgba(54, 169, 161, 0.9)',
                'rgba(50, 160, 160, 0.9)',
                'rgba(49, 158, 160, 0.9)',
                'rgba(44, 145, 159, 0.9)',
                'rgba(37, 126, 159, 0.9)',
                'rgba(34, 116, 158, 0.9)',
                'rgba(28, 101, 158, 0.9)',
                'rgba(26, 95, 157, 0.9)',
                'rgba(25, 91, 157, 0.9)',


                'rgba(26, 95, 157, 0.9)',
                'rgba(28, 101, 158, 0.9)',
                'rgba(34, 116, 158, 0.9)',
                'rgba(37, 126, 159, 0.9)',
                'rgba(44, 145, 159, 0.9)',
                'rgba(49, 158, 160, 0.9)',
                'rgba(50, 160, 160, 0.9)',
                'rgba(54, 169, 161, 0.9)',
                'rgba(63, 195, 162, 0.9)',
                'rgba(63, 194, 162, 0.9)',

            ],
            borderWidth: 1,
            hoverBorderWidth: 0,
            hoverBackgroundColor: [
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
            ],
        };

        var chartOptions = {
            scales: {
                yAxes: [{
                    barPercentage: 0.5
                }]
            },
            elements: {
                rectangle: {
                    borderSkipped: 'left',
                }
            }
        };

        var barChart = new Chart(densityCanvas, {
            type: 'horizontalBar',
            data: {
                labels: [
                    @foreach (var Com in ViewBag.Listcomparar)
                    {
                        @Html.Raw("'")
                        @Html.Raw(@Com.TipoCategoria)
                        @Html.Raw("'")
                        @Html.Raw(",")
                    }
                ],
                datasets: [densityData],
            },
            options: chartOptions
        });
   });

    $(document).ready(function () {
        var densityCanvas = document.getElementById("SuperficieChart");

        Chart.defaults.global.defaultFontFamily = "Arial, sans-serifapple-system,BlinkMacSystemFont,'Segoe UI',Roboto,'Helvetica Neue',Arial,sans-serif";
        Chart.defaults.global.defaultFontSize = 14;

        var densityData = {
            label: 'Superficie construida (M2)',

            options: {
                legend: {
                    labels: {
                        // This more specific font property overrides the global property
                        //fontColor: 'black',
                        defaultFontFamily: 'Arial, sans-serifapple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif',
                        fontColor: 'rgb(154, 154, 154)',
                        usePointStyle: true,
                    }
                }
            },


            data: [
                @foreach (var Com in ViewBag.Listcomparar)
                {
                    @Html.Raw(@Com.Superficie)
                    @Html.Raw(",")
                }



            ],
            backgroundColor: [
                'rgba(67, 206, 162, 0.9)',
                'rgba(63, 194, 162, 0.9)',
                'rgba(63, 195, 162, 0.9)',
                'rgba(54, 169, 161, 0.9)',
                'rgba(50, 160, 160, 0.9)',
                'rgba(49, 158, 160, 0.9)',
                'rgba(44, 145, 159, 0.9)',
                'rgba(37, 126, 159, 0.9)',
                'rgba(34, 116, 158, 0.9)',
                'rgba(28, 101, 158, 0.9)',
                'rgba(26, 95, 157, 0.9)',
                'rgba(25, 91, 157, 0.9)',

                'rgba(26, 95, 157, 0.9)',
                'rgba(28, 101, 158, 0.9)',
                'rgba(34, 116, 158, 0.9)',
                'rgba(37, 126, 159, 0.9)',
                'rgba(44, 145, 159, 0.9)',
                'rgba(49, 158, 160, 0.9)',
                'rgba(50, 160, 160, 0.9)',
                'rgba(54, 169, 161, 0.9)',
                'rgba(63, 195, 162, 0.9)',
                'rgba(63, 194, 162, 0.9)',
                'rgba(67, 206, 162, 0.9)',

            ],
            borderColor: [
                'rgba(63, 194, 162, 0.9)',
                'rgba(63, 195, 162, 0.9)',
                'rgba(54, 169, 161, 0.9)',
                'rgba(50, 160, 160, 0.9)',
                'rgba(49, 158, 160, 0.9)',
                'rgba(44, 145, 159, 0.9)',
                'rgba(37, 126, 159, 0.9)',
                'rgba(34, 116, 158, 0.9)',
                'rgba(28, 101, 158, 0.9)',
                'rgba(26, 95, 157, 0.9)',
                'rgba(25, 91, 157, 0.9)',


                'rgba(26, 95, 157, 0.9)',
                'rgba(28, 101, 158, 0.9)',
                'rgba(34, 116, 158, 0.9)',
                'rgba(37, 126, 159, 0.9)',
                'rgba(44, 145, 159, 0.9)',
                'rgba(49, 158, 160, 0.9)',
                'rgba(50, 160, 160, 0.9)',
                'rgba(54, 169, 161, 0.9)',
                'rgba(63, 195, 162, 0.9)',
                'rgba(63, 194, 162, 0.9)',

            ],
            borderWidth: 1,
            hoverBorderWidth: 0,
            hoverBackgroundColor: [
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
            ],
        };

        var chartOptions = {
            scales: {
                yAxes: [{
                    barPercentage: 0.5
                }]
            },
            elements: {
                rectangle: {
                    borderSkipped: 'left',
                }
            }
        };

        var barChart = new Chart(densityCanvas, {
            type: 'horizontalBar',
            data: {
                labels: [
                    @foreach (var Com in ViewBag.Listcomparar)
                    {
                        @Html.Raw("'")
                        @Html.Raw(@Com.TipoCategoria)
                        @Html.Raw("'")
                        @Html.Raw(",")
                    }
                ],
                datasets: [densityData],
            },
            options: chartOptions
        });
   });

    $(document).ready(function () {
        var densityCanvas = document.getElementById("SuperficieTChart");

        Chart.defaults.global.defaultFontFamily = "Arial, sans-serifapple-system,BlinkMacSystemFont,'Segoe UI',Roboto,'Helvetica Neue',Arial,sans-serif";
        Chart.defaults.global.defaultFontSize = 14;

        var densityData = {
            label: 'Superficie del terreno  (M2)',

            options: {
                legend: {
                    labels: {
                        // This more specific font property overrides the global property
                        //fontColor: 'black',
                        defaultFontFamily: 'Arial, sans-serifapple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif',
                        fontColor: 'rgb(154, 154, 154)',
                        usePointStyle: true,
                    }
                }
            },


            data: [
                @foreach (var Com in ViewBag.Listcomparar)
                {
                    @Html.Raw(@Com.SuperficieT)
                    @Html.Raw(",")
                }



            ],
            backgroundColor: [
                'rgba(67, 206, 162, 0.9)',
                'rgba(63, 194, 162, 0.9)',
                'rgba(63, 195, 162, 0.9)',
                'rgba(54, 169, 161, 0.9)',
                'rgba(50, 160, 160, 0.9)',
                'rgba(49, 158, 160, 0.9)',
                'rgba(44, 145, 159, 0.9)',
                'rgba(37, 126, 159, 0.9)',
                'rgba(34, 116, 158, 0.9)',
                'rgba(28, 101, 158, 0.9)',
                'rgba(26, 95, 157, 0.9)',
                'rgba(25, 91, 157, 0.9)',

                'rgba(26, 95, 157, 0.9)',
                'rgba(28, 101, 158, 0.9)',
                'rgba(34, 116, 158, 0.9)',
                'rgba(37, 126, 159, 0.9)',
                'rgba(44, 145, 159, 0.9)',
                'rgba(49, 158, 160, 0.9)',
                'rgba(50, 160, 160, 0.9)',
                'rgba(54, 169, 161, 0.9)',
                'rgba(63, 195, 162, 0.9)',
                'rgba(63, 194, 162, 0.9)',
                'rgba(67, 206, 162, 0.9)',

            ],
            borderColor: [
                'rgba(63, 194, 162, 0.9)',
                'rgba(63, 195, 162, 0.9)',
                'rgba(54, 169, 161, 0.9)',
                'rgba(50, 160, 160, 0.9)',
                'rgba(49, 158, 160, 0.9)',
                'rgba(44, 145, 159, 0.9)',
                'rgba(37, 126, 159, 0.9)',
                'rgba(34, 116, 158, 0.9)',
                'rgba(28, 101, 158, 0.9)',
                'rgba(26, 95, 157, 0.9)',
                'rgba(25, 91, 157, 0.9)',


                'rgba(26, 95, 157, 0.9)',
                'rgba(28, 101, 158, 0.9)',
                'rgba(34, 116, 158, 0.9)',
                'rgba(37, 126, 159, 0.9)',
                'rgba(44, 145, 159, 0.9)',
                'rgba(49, 158, 160, 0.9)',
                'rgba(50, 160, 160, 0.9)',
                'rgba(54, 169, 161, 0.9)',
                'rgba(63, 195, 162, 0.9)',
                'rgba(63, 194, 162, 0.9)',

            ],
            borderWidth: 1,
            hoverBorderWidth: 0,
            hoverBackgroundColor: [
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
            ],
        };

        var chartOptions = {
            scales: {
                yAxes: [{
                    barPercentage: 0.5
                }]
            },
            elements: {
                rectangle: {
                    borderSkipped: 'left',
                }
            }
        };

        var barChart = new Chart(densityCanvas, {
            type: 'horizontalBar',
            data: {
                labels: [
                    @foreach (var Com in ViewBag.Listcomparar)
                    {
                        @Html.Raw("'")
                        @Html.Raw(@Com.TipoCategoria)
                        @Html.Raw("'")
                        @Html.Raw(",")
                    }
                ],
                datasets: [densityData],
            },
            options: chartOptions
        });
    });

    $(document).ready(function () {
        var densityCanvas = document.getElementById("WCChart");

        Chart.defaults.global.defaultFontFamily = "Arial, sans-serifapple-system,BlinkMacSystemFont,'Segoe UI',Roboto,'Helvetica Neue',Arial,sans-serif";
        Chart.defaults.global.defaultFontSize = 14;

        var densityData = {
            label: 'WC',

            options: {
                legend: {
                    labels: {
                        // This more specific font property overrides the global property
                        //fontColor: 'black',
                        defaultFontFamily: 'Arial, sans-serifapple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif',
                        fontColor: 'rgb(154, 154, 154)',
                        usePointStyle: true,
                    }
                }
            },


            data: [
                @foreach (var Com in ViewBag.Listcomparar)
                {
                    @Html.Raw(@Com.WC)
                    @Html.Raw(",")
                }



            ],
            backgroundColor: [
                'rgba(67, 206, 162, 0.9)',
                'rgba(63, 194, 162, 0.9)',
                'rgba(63, 195, 162, 0.9)',
                'rgba(54, 169, 161, 0.9)',
                'rgba(50, 160, 160, 0.9)',
                'rgba(49, 158, 160, 0.9)',
                'rgba(44, 145, 159, 0.9)',
                'rgba(37, 126, 159, 0.9)',
                'rgba(34, 116, 158, 0.9)',
                'rgba(28, 101, 158, 0.9)',
                'rgba(26, 95, 157, 0.9)',
                'rgba(25, 91, 157, 0.9)',

                'rgba(26, 95, 157, 0.9)',
                'rgba(28, 101, 158, 0.9)',
                'rgba(34, 116, 158, 0.9)',
                'rgba(37, 126, 159, 0.9)',
                'rgba(44, 145, 159, 0.9)',
                'rgba(49, 158, 160, 0.9)',
                'rgba(50, 160, 160, 0.9)',
                'rgba(54, 169, 161, 0.9)',
                'rgba(63, 195, 162, 0.9)',
                'rgba(63, 194, 162, 0.9)',
                'rgba(67, 206, 162, 0.9)',

            ],
            borderColor: [
                'rgba(63, 194, 162, 0.9)',
                'rgba(63, 195, 162, 0.9)',
                'rgba(54, 169, 161, 0.9)',
                'rgba(50, 160, 160, 0.9)',
                'rgba(49, 158, 160, 0.9)',
                'rgba(44, 145, 159, 0.9)',
                'rgba(37, 126, 159, 0.9)',
                'rgba(34, 116, 158, 0.9)',
                'rgba(28, 101, 158, 0.9)',
                'rgba(26, 95, 157, 0.9)',
                'rgba(25, 91, 157, 0.9)',


                'rgba(26, 95, 157, 0.9)',
                'rgba(28, 101, 158, 0.9)',
                'rgba(34, 116, 158, 0.9)',
                'rgba(37, 126, 159, 0.9)',
                'rgba(44, 145, 159, 0.9)',
                'rgba(49, 158, 160, 0.9)',
                'rgba(50, 160, 160, 0.9)',
                'rgba(54, 169, 161, 0.9)',
                'rgba(63, 195, 162, 0.9)',
                'rgba(63, 194, 162, 0.9)',

            ],
            borderWidth: 1,
            hoverBorderWidth: 0,
            hoverBackgroundColor: [
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
            ],
        };

        var chartOptions = {
            scales: {
                yAxes: [{
                    barPercentage: 1
                }]
            },
            elements: {
                rectangle: {
                    borderSkipped: 'left',
                }
            }
        };

        var barChart = new Chart(densityCanvas, {
            type: 'horizontalBar',
            data: {
                labels: [
                    @foreach (var Com in ViewBag.Listcomparar)
                    {
                        @Html.Raw("'")
                        @Html.Raw(@Com.TipoCategoria)
                        @Html.Raw("'")
                        @Html.Raw(",")
                    }
                ],
                datasets: [densityData],
            },
            options: chartOptions
        });
    });

    $(document).ready(function () {
        var densityCanvas = document.getElementById("EstacionamientosChart");

        Chart.defaults.global.defaultFontFamily = "Arial, sans-serifapple-system,BlinkMacSystemFont,'Segoe UI',Roboto,'Helvetica Neue',Arial,sans-serif";
        Chart.defaults.global.defaultFontSize = 14;

        var densityData = {
            label: 'Estacionamientos ',

            options: {
                legend: {
                    labels: {
                        // This more specific font property overrides the global property
                        //fontColor: 'black',
                        defaultFontFamily: 'Arial, sans-serifapple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif',
                        fontColor: 'rgb(154, 154, 154)',
                        usePointStyle: true,
                    }
                }
            },


            data: [
                @foreach (var Com in ViewBag.Listcomparar)
                {
                    @Html.Raw(@Com.Estacionamientos)
                    @Html.Raw(",")
                }



            ],
            backgroundColor: [
                'rgba(67, 206, 162, 0.9)',
                'rgba(63, 194, 162, 0.9)',
                'rgba(63, 195, 162, 0.9)',
                'rgba(54, 169, 161, 0.9)',
                'rgba(50, 160, 160, 0.9)',
                'rgba(49, 158, 160, 0.9)',
                'rgba(44, 145, 159, 0.9)',
                'rgba(37, 126, 159, 0.9)',
                'rgba(34, 116, 158, 0.9)',
                'rgba(28, 101, 158, 0.9)',
                'rgba(26, 95, 157, 0.9)',
                'rgba(25, 91, 157, 0.9)',

                'rgba(26, 95, 157, 0.9)',
                'rgba(28, 101, 158, 0.9)',
                'rgba(34, 116, 158, 0.9)',
                'rgba(37, 126, 159, 0.9)',
                'rgba(44, 145, 159, 0.9)',
                'rgba(49, 158, 160, 0.9)',
                'rgba(50, 160, 160, 0.9)',
                'rgba(54, 169, 161, 0.9)',
                'rgba(63, 195, 162, 0.9)',
                'rgba(63, 194, 162, 0.9)',
                'rgba(67, 206, 162, 0.9)',

            ],
            borderColor: [
                'rgba(63, 194, 162, 0.9)',
                'rgba(63, 195, 162, 0.9)',
                'rgba(54, 169, 161, 0.9)',
                'rgba(50, 160, 160, 0.9)',
                'rgba(49, 158, 160, 0.9)',
                'rgba(44, 145, 159, 0.9)',
                'rgba(37, 126, 159, 0.9)',
                'rgba(34, 116, 158, 0.9)',
                'rgba(28, 101, 158, 0.9)',
                'rgba(26, 95, 157, 0.9)',
                'rgba(25, 91, 157, 0.9)',


                'rgba(26, 95, 157, 0.9)',
                'rgba(28, 101, 158, 0.9)',
                'rgba(34, 116, 158, 0.9)',
                'rgba(37, 126, 159, 0.9)',
                'rgba(44, 145, 159, 0.9)',
                'rgba(49, 158, 160, 0.9)',
                'rgba(50, 160, 160, 0.9)',
                'rgba(54, 169, 161, 0.9)',
                'rgba(63, 195, 162, 0.9)',
                'rgba(63, 194, 162, 0.9)',

            ],
            borderWidth: 1,
            hoverBorderWidth: 0,
            hoverBackgroundColor: [
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
               'rgba(0, 69, 69, 1)',
            ],
        };

        var chartOptions = {
            scales: {
                yAxes: [{
                    barPercentage: 1
                }]
            },
            elements: {
                rectangle: {
                    borderSkipped: 'left',
                }
            }
        };

        var barChart = new Chart(densityCanvas, {
            type: 'horizontalBar',
            data: {
                labels: [
                    @foreach (var Com in ViewBag.Listcomparar)
                    {
                        @Html.Raw("'")
                        @Html.Raw(@Com.TipoCategoria)
                        @Html.Raw("'")
                        @Html.Raw(",")
                    }
                ],
                datasets: [densityData],
            },
            options: chartOptions
        });
    });

    function MostrarInmuebleComparar(dt) {
        var obj = {};
        obj['Id'] = dt;
        var jsonObject = {
            "Inmueble": obj
        };

        $.ajax({
            url: "@Url.Action("MostrarInmuebleId", "Comparar")",
            type: "POST",
            data: JSON.stringify(jsonObject),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            error: function (response) {
                alert("MANDAR MENSAJE SE ERROR");
            },
            success: function (response) {
                window.location.href = '@Url.Action("InmuebleDetalle","home")?Inm='+response.IdCf;
            }
        });
    }

    function QuitarInmueble(dt) {
        var obj = {};
        obj['Id'] = dt;
        var jsonObject = {
            "Inmueble": obj
        };

        $.ajax({
            url: "@Url.Action("QuitarInmueble", "Comparar")",
            type: "POST",
            data: JSON.stringify(jsonObject),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            error: function (response) {
                alert("MANDAR MENSAJE SE ERROR");
            },
            success: function (response) {
                if (response.Respuesta) {
                    swal({
                        title: "Inmueble eliminado!",
                        text: response.RespuestaText,
                        icon: "success",
                        button: "Aceptar",
                    }).then((value) => {
                        window.location.href = '@Url.Action("Index","Comparar")';
                    });
                }
                else {
                    swal({
                        title: "Algo ocurrió !",
                        text: response.RespuestaText,
                        icon: "warning",
                        button: "Aceptar",
                    });
                }
            }
        });
    }
</script>